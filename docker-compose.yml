version: '3'

services:
    app:
      build: 
        context: ./frontend
        dockerfile: Docker/Dockerfile
      image: anjanibarlapati/fingrow-app
      container_name: fingrow-app
      ports:
        - "3000:3000"
      networks: 
        - fingrow-network
      command: npm start 
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3000"] 
        interval: 30s 
        retries: 3    
        start_period: 10s  
        start_interval: 5s
        timeout: 30s 
      depends_on:
        server:
          condition: service_healthy

    server:
      build: 
        context: ./backend
        dockerfile: Docker/Dockerfile
      image: anjanibarlapati/fingrow-server
      container_name: fingrow-server
      ports:
        - "4321:4321"
      networks: 
        - fingrow-network
      command: npm start 
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:4321/users"]
        interval: 30s 
        retries: 3    
        start_period: 10s  
        start_interval: 5s
        timeout: 30s 
        
    db:
      image: mongo
      container_name: db
      ports:
         - "27017:27017"
      networks:
        - fingrow-network
      volumes:
        - fingrow-data:/data/db
      healthcheck:
        test: echo 'db.runCommand("ping").ok'         
        interval: 30s 
        retries: 3    
        start_period: 30s  
        start_interval: 5s
        timeout: 30s 

networks:
  fingrow-network:
    name: fingrow-network

volumes:
  fingrow-data:
    name: fingrow-data